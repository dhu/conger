clear all; close all;
agg_p = zeros(9, 2);
load 128.148.31.135:32000.c_cost.primary.2000.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(1, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.primary.1500.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(2, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.primary.1000.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(3, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.primary.500.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(4, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.primary.250.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(5, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.primary.125.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(6, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.primary.62.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(7, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.primary.31.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(8, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.primary.15.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_p(9, :) = mean(X128, 1);
agg_p = sort(agg_p, 1);

agg_b = zeros(9, 2);
load 128.148.31.135:32000.c_cost.backup.2000.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(1, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.backup.1500.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(2, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.backup.1000.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(3, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.backup.500.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(4, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.backup.250.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(5, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.backup.125.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(6, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.backup.62.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(7, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.backup.31.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(8, :) = mean(X128, 1);
load 128.148.31.135:32000.c_cost.backup.15.log;
len = length(X128(:, 1));
X128 = X128(ceil(len/3):floor(len*6/7), 2:3);
agg_b(9, :) = mean(X128, 1);
agg_b = sort(agg_b, 1);


figure(1); hold on;
c_costs = zeros(2, length(agg_p(:, 1)), 2);
c_costs(1, :, :) = agg_p;
c_costs(2, :, :) = agg_b;
group_names = {'aggregate (primary)', 'aggregate (backup)'};
title = '';
x_label = 'checkpoint interval (ms)';
y_label = 'checkpoint time (ms)';
graph(group_names, c_costs, title, x_label, y_label, {'k+-', 'kx-', 'k.-',  '-'});
legend(group_names, 'Location', 'NorthWest');
plot(c_costs(1, :, 1), appr(c_costs(1, :, 1), c_costs(1, :, 2)), ':');
plot(c_costs(2, :, 1), appr(c_costs(2, :, 1), c_costs(2, :, 2)), ':');
%axis([0 1000 0 15]);
%set(gca, 'XTick', [0 3 4 6 9 13 18 24 31 39]);
hold off;

figure(2);hold on;
for i = 1:length(agg_p(:, 1))
    agg_p(i, 2) = 100/agg_p(i, 1)*agg_p(i, 2);
    agg_b(i, 2) = 100/agg_b(i, 1)*agg_b(i, 2);
end
ha_loads = zeros(2, length(agg_p(:, 1)), 2);
ha_loads(1, :, :) = agg_p;
ha_loads(2, :, :) = agg_b;
group_names = {'aggregate (primary)', 'aggregate (backup)'};
title = '';
x_label = 'checkpoint interval (ms)';
y_label = 'CPU utilization for HA (%)';
graph(group_names, ha_loads, title, x_label, y_label, {'k+-', 'kx-', 'k.-',  '-'});
legend(group_names, 'Location', 'NorthEast');
plot(ha_loads(1, :, 1), appr(ha_loads(1, :, 1), ha_loads(1, :, 2)), ':');
plot(ha_loads(2, :, 1), appr(ha_loads(2, :, 1), ha_loads(2, :, 2)), ':');
axis([0 max(max(ha_loads(:, :, 1))) 0 50]);
hold off;
